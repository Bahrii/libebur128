cmake_minimum_required(VERSION 2.6.4)

if(USE_GLIB)
  include_directories(SYSTEM ${GLIB_INCLUDE_DIRS})

  add_library(input input)
  target_link_libraries(input ${GMODULE_LIBRARY})

  if(WIN32 AND NOT "${CMAKE_SHARED_MODULE_PREFIX}")
    set(CMAKE_SHARED_MODULE_PREFIX "lib")
  endif()

  if(USE_SNDFILE)
    include_directories(SYSTEM ${SNDFILE_INCLUDE_DIRS})
    add_library(input_sndfile MODULE input_sndfile.c input_helper.c)
    target_link_libraries(input_sndfile ${SNDFILE_LIBRARIES})
    if(WIN32)
        target_link_libraries(input_sndfile ${GLIB_LIBRARY})
    endif()
    install(TARGETS input_sndfile LIBRARY DESTINATION ${FOLDER_PLUGIN})
  endif()

  if(USE_MPG123)
    include_directories(SYSTEM ${MPG123_INCLUDE_DIRS})
    add_library(input_mpg123 MODULE input_mpg123.c)
    target_link_libraries(input_mpg123 ${MPG123_LIBRARIES})
    install(TARGETS input_mpg123 LIBRARY DESTINATION ${FOLDER_PLUGIN})
  endif()

  if(USE_MPCDEC)
    include_directories(SYSTEM ${MPCDEC_INCLUDE_DIRS})
    add_library(input_musepack MODULE input_mpcdec.c input_helper.c)
    target_link_libraries(input_musepack ${MPCDEC_LIBRARY})
    if(WIN32)
        target_link_libraries(input_musepack ${GLIB_LIBRARY})
    endif()
    install(TARGETS input_musepack LIBRARY DESTINATION ${FOLDER_PLUGIN})
  endif()

  if(USE_FFMPEG)
    include_directories(SYSTEM ${FFMPEG_INCLUDE_DIRS})
    add_library(input_ffmpeg MODULE input_ffmpeg.c mp3_padding.c mp4_padding.c input_helper.c)
    target_link_libraries(input_ffmpeg ${FFMPEG_LIBRARIES} ${GLIB_LIBRARY})
    install(TARGETS input_ffmpeg LIBRARY DESTINATION ${FOLDER_PLUGIN})
  endif()

  if(USE_GSTREAMER)
    include_directories(SYSTEM ${GSTREAMER_INCLUDE_DIRS})
    if(GSTREAMER_INPUT_STATIC)
      add_library(input_gstreamer input_gstreamer.c)
      target_link_libraries(input input_gstreamer)
      set_target_properties(input input_gstreamer PROPERTIES COMPILE_DEFINITIONS GSTREAMER_INPUT_STATIC)
    else()
      add_library(input_gstreamer MODULE input_gstreamer.c)
      install(TARGETS input_gstreamer LIBRARY DESTINATION ${FOLDER_PLUGIN})
    endif()
    set_target_properties(input_gstreamer PROPERTIES COMPILE_FLAGS "${GSTREAMER_CFLAGS}")
    target_link_libraries(input_gstreamer ${GSTREAMER_LIBRARY} ${GSTAPP_LIBRARY} ${GSTAUDIO_LIBRARY} ${GOBJECT_LIBRARY} ${GLIB_LIBRARY})
    set_target_properties(input_gstreamer PROPERTIES LINK_INTERFACE_LIBRARIES "")
  endif()
endif()
